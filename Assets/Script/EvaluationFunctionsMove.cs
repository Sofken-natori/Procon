using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices.WindowsRuntime;
using UnityEngine;

public class EvaluationFunctionsMove : MonoBehaviour
{
    // Start is called before the first frame update
    TurnManager tm;
    GameObject Board;
    KomaCalulator kc;
    Area area;
    void Awake()
    {
        Board = GameObject.Find("UserInterface/Board");
        tm = this.GetComponent<TurnManager>();
        kc = Board.GetComponent<KomaCalulator>();
      
    }
    public int[,] EvaluationA()
    {
        if (tm.BoardXMax == 11)
        {
            area = this.transform.GetChild(0).GetChild(5).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreA11 = new[,] {
{-100,   -95,  -90,  -80,  -70,  -60,  -50,  -40,  -90,  -95,  -100},
{-99, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
{-98, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
{-97, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
{-96, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
{-95, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
{-96, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
{-97, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
{-98, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
{-96, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
{-100, -95,  -90,  -80,  -70,  -60,  -50,  -30,  -90,  -95,  -100},



            };
                Debug.Log(5645);
                return EvaluateMoveStateScoreA11;
               
            }
            area = this.transform.GetChild(5).GetChild(5).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreB11 = new[,]
                {
                {0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
                {0, -1, 0,  0,  -1, 0,  -1, 0,  0,  -1, 0},
                {0, 0,  2,  0,  0,  -1, 0,  0,  2,  0,  0},
                {0, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0},
                {0, -1, 0,  0,  2,  0,  2,  0,  0,  -1, 0},
                {0, 0,  -1, 0,  0,  -1, 0,  0,  -1, 0,  0},
                {0, -1, 0,  0,  2,  0,  2,  0,  0,  -1, 0},
                {0, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0},
                {0, 0,  2,  0,  0,  -1, 0,  0,  2,  0,  0},
                {0, -1, 0,  0,  -1, 0,  -1, 0,  0,  -1, 0},
                {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

             };
                Debug.Log(567);
                return EvaluateMoveStateScoreB11;
            }
            area = this.transform.GetChild(0).GetChild(10).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreC11 = new[,] {
          /*  {  -20 , -8,   -7,   -6 ,  -5 ,  -4 ,  -6 ,  -7 ,  -8   ,  -9 ,  -20 },
            { -9 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  -5 ,  -8 },
            { -8 ,  0  , 0  , 0 ,  0 ,  0 ,  0 ,  0 ,  0 , 9 ,  -7 },
            { -7 ,  0 ,  0 ,  0 ,  -1 ,  -1 ,  -1 ,  0,   -1 ,  -8,   -6 },
            { -6   ,0 ,  0 ,  -1 ,  -1 ,  0 ,  -1 ,  0 ,  -1 ,  -7 ,  -5 },
            { -5  , 0  , -1 ,  -1 ,  0 ,  0 ,  0 ,  -1 ,  -1 ,  -6 ,  -4},
            { -7  , 0 ,  -1 ,  0,      -1,   0  , -1 ,  -1,   0 ,  0 ,  -5 },
            { -8  , 30  , -1 ,  0 ,  0 ,  1 ,  -1 , 0,   0 ,  0 ,  -6 },
            { 30 ,  0 ,   30 ,  0  , 0 ,  0 ,  0 ,  0  , 0 ,  0 ,  -8 },
            { -10 , 30,  -3 ,  -2  , -1 ,  0 ,  -1 ,  -2 ,  -3  , -6 ,  -9 },
            { -20 ,  -10 ,  -6 ,  -5 ,  -4 ,  -3 ,  -5 ,  -6 ,  -8  , -9 ,  -20 },
          */
            { -100 ,-10,   -10,   -6 ,  -5 ,  -4 ,  -6 ,  -7 ,  -8   ,  -9 ,  -20 },
            { -900 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  -5 ,  -8 },
            { -980 ,  0  , 0  , 0 ,  0 ,  0 ,  0 ,  0 ,  0 , 9 ,  -7 },
            { -80 ,  0 ,  0 ,  0 ,  -1 ,  -1 ,  -1 ,  0,   -1 ,  -8,   -6 },
            { -80   ,0 ,  0 ,  -1 ,  -1 ,  0 ,  -1 ,  0 ,  -1 ,  -7 ,  -5 },
            { -70  , 0  , 0 ,  -1 ,  0 ,  0 ,  0 ,  -1 ,  -1 ,  -6 ,  -4},
            { -60  , 0 ,  0 ,  0,      -1,   0  , -1 ,  -1,   0 ,  0 ,  -5 },
            { -30  ,11  , 0 ,  0 ,  0 ,  1 ,  -1 , 0,   0 ,  0 ,  -6 },
            { 11 ,  0 ,   11 ,  0  , 0 ,  0 ,  0 ,  0  , 0 ,  0 ,  -8 },
            { -60 , 11,  0 ,  -2  , -1 ,  0 ,  -1 ,  -2 ,  -3  , -6 ,  -9 },
            { -90 ,  0 ,  -6 ,  -5 ,  -4 ,  -3 ,  -5 ,  -6 ,  -8  , -9 ,  -20 },
                };
                Debug.Log(569);
                return EvaluateMoveStateScoreC11;
            }


        }
        if (tm.BoardXMax == 13)
        {
            area = this.transform.GetChild(0).GetChild(6).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreA13 = new[,] {
    { -100 ,  -100  , -95 ,  -91  , -92 ,  -93 ,  -94 ,  -95 ,  -96  , -97 ,  -98 ,  -99,   -100},
    { -100  , 0  , 0  , 0 ,  0 ,  1,   0 ,  1 ,  0 ,  0 ,  0  , 1  , 0 },
    { -98  , 0  , 0  , 0 ,  0 ,  1 ,  0 ,  1  , 0 ,  0 ,  0 ,  0 ,  0},
    {   -97   ,0 ,  0  , 2  , 0  , 1  , 0 ,  1  , 0  , 2  , 0  , 0  , 0},
    {       -96 ,  0 ,  0 ,  0 ,  1  , 0 ,  0 ,  0 ,  1 ,  0 ,  0 ,  0 ,  0},
    {-95 ,  1,   1 ,  1 ,  0 ,  2 ,  0,   2 ,  0 ,  1 ,  1 ,  1  , 0},
    { -94  , 0  , 0  , 0  , 0,   0 ,  2 ,  0 ,  0  , 0  , 0  , 0 ,  1},
    { -93  , 1 ,  1 ,  1 ,  0 ,  2,   0 ,  2,   0,   1,   1,   1 ,  0},
    { -92  , 0 ,  0 ,  0 ,  1 ,  0 ,  0  , 0  , 1  , 0  , 0  , 0  , 0},
    { -91  , 0   ,0  , 2 ,  0 ,  1 ,  0,   1 ,  0  , 2 ,  0 ,  0 ,  0},
    { -90 ,  0 ,  0  , 0 ,  0 ,  1 ,  0 ,  1 ,  0,   0 ,  0 ,  0 ,  0},
    { -99  , 1  , 0 ,  0 ,  0  , 1 ,  0,   1  , 0  , 0 ,  0,   1   ,0},
    { -100 ,  -99 ,  -98 ,  -97  , -96  , -95  , -96  , -97 ,  -98  , -99 ,  -99 ,  -99 ,  -100}
    };
                return EvaluateMoveStateScoreA13;
            }
            area = this.transform.GetChild(6).GetChild(6).GetComponent<Area>();
            if (area.pond)
            {

                int[,] EvaluateMoveStateScoreB13 = new[,]
                {
            {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            {0, 2,  -1, 0,  0,  -1, 0,  -1, 0,  0,  -1, 2,  0},
            {0, -1, -1, 0,  0,  0,  -1, 0,  0,  0,  -1, -1, 0},
            {0, 0,  0,  2,  0,  0,  -1, 0,  0,  2,  0,  0,  0},
            {0, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0},
            {0, -1, 0,  0,  0,  2,  0,  2,  0,  0,  0,  -1, 0},
            {0, 0,  -1, -1, 0,  0,  -1, 0,  0,  -1, -1, 0,  0},
            {0, -1, 0,  0,  0,  2,  0,  2,  0,  0,  0,  -1, 0},
            {0, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0},
            {0, 0,  0,  2,  0,  0,  -1, 0,  0,  2,  0,  0,  0},
            {0, -1, -1, 0,  0,  0,  -1, 0,  0,  0,  -1, -1, 0},
            {0, 2,  -1, 0,  0,  -1, 0,  -1, 0,  0,  -1, 2,  0},
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            };
                return EvaluateMoveStateScoreB13;
            }
            area = this.transform.GetChild(0).GetChild(12).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateBuildStateScoreC13 = new[,] {
             {0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
            {0, 0,  0,  -1, 2,  2,  0,  0,  0,  0,  0,  -1, 0},
            {0, 0,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
            {0, 2,  0,  0,  0,  0,  0,  0,  2,  -1, 2,  0,  0},
            {0, 2,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0},
            {0, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  0,  0},
            {0, 0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0},
            {0, 0,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  0},
            {0, 0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  2,  0},
            {0, 0,  2,  -1, 2,  0,  0,  0,  0,  0,  0,  2,  0},
            {0, 0,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0},
            {0, -1, 0,  0,  0,  0,  0,  2,  2,  -1, 0,  0,  0},
            { -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            };
                return EvaluateBuildStateScoreC13;
            }

        }
        if (tm.BoardXMax == 15)
        {
            area = this.transform.GetChild(0).GetChild(6).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreA15 = new[,] {

                { 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, },
                { 0, 0, 0, 0, 0, -1, 0, 2, 0, -1, 0, 0, 0, 0, 0, },
                { 0, 0, -1, 2, 0, -1, 0, 0, 0, -1, 0, 2, -1, 0, 0, },
                { 0, 0, 2, 0, 0, -1, 0, -1, 0, -1, 0, 0, 2, 0, 0, },
                { 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, },
                { 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, },
                { -1, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, -1, },
                { 0, 2, 0, -1, 0, 0, 0, 2, 0, 0, 0, -1, 0, 2, 0, },
                { -1, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 1, },
                { 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 0, },
                { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, },
                { 0, 0, 2, 0, 0, -1, 0, 1, 0, -1, 0, 0, 2, 0, 0, },
                { 0, 0, -1, 2, 0, -1, 0, 0, 0, -1, 0, 2, -1, 0, 0, },
                { 0, 0, 0, 0, 0, -1, 0, 2, 0, -1, 0, 0, 0, 0, 0, },
                { 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, }

                };
                return EvaluateMoveStateScoreA15;
            }
            area = this.transform.GetChild(7).GetChild(7).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreB15 = new[,]
    {
   {-100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100},
{-100,  -10,    -9, -8, -7, -6, -5, -1, -5, -6, -7, -8, -9, -10,    -100},
{-100,  -8, -5, 1 ,  5,  0,  0,  0,  0,  0,  0,  0,  0,  -8, -100},
{-100,  -9, -4, 2 ,  4,  5,  6,  0,  0,  0,  0,  0,  0,  -9, -100},
{-100,  -7, -3, 3 ,  5,  5,  6,  0,  6,  0,  0,  0,  0,  -7, -100},
{-100,  -6, -2, 4 ,  4,  5,  6,  50, 6,  0,  0,  0,  0,  -6, -100},
{-100,  -5, -1, 5 ,  5,  5,  6,  50, 6,  0,  0,  0,  0,  -5, -100},
{-100,  -4, 0,  3,  4,  5,  6,  50, 6,  0,  0,  0,  0,  -4, -100},
{-100,  -5, -2, 1 ,  5,  5,  6,  0,  6,  0,  0,  0,  0,  -5, -100},
{-100,  -6, -4, 2 ,  4,  5,  6,  0,  0,  0,  0,  0,  0,  -6, -100},
{-100,  -7, -3, 3 ,  5,  5,  6,  0,  0,  0,  0,  0,  0,  -7, -100},
{-100,  -8, -2, 4 ,  3,  5,  6,  0,  0,  0,  0,  0,  0,  -8, -100},
{-100,  -9, -1, 5 ,  0,  5,  6,  0,  0,  0,  0,  0,  0,  -9, -100},
{-100,  -10,    -8, -7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -10,    -100},
{-100,  -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100,   -100},



        };
                Debug.Log(887879987);
                return EvaluateMoveStateScoreB15;
            }
            area = this.transform.GetChild(0).GetChild(14).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreC15 = new[,] {
          {0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1},
{0, 0,  0,  0,  0,  -1, 2,  -1, 2,  -1, 0,  0,  0,  -1, -1},
{0, 0,  0,  0,  -1, 0,  -1, 0,  -1, 0,  -1, 0,  2,  -1, 0},
{0, 0,  0,  -1, 0,  0,  2,  -1, 2,  0,  0,  -1, -1, 2,  0},
{0, 0,  -1, 0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, 0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0},
{0, 2,  -1, 2,  0,  -1, -1, 2,  -1, 0,  -1, 2,  -1, 2,  0},
{0, -1, 0,  -1, -1, -1, 2,  2,  2,  -1, -1, -1, 0,  -1, 0},
{0, 2,  -1, 2,  -1, 0,  -1, 2,  -1, -1, 0,  2,  -1, 2,  0},
{0, 0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0},
{0, 2,  -1, -1, 0,  0,  2,  -1, 2,  0,  0,  -1, 0,  0,  0},
{0, -1, 2,  0,  -1, 0,  -1, 0,  -1, 0,  -1, 0,  0,  0,  0},
{-1,    -1, 0,  0,  0,  -1, 2,  -1, 2,  -1, 0,  0,  0,  0,  0},
{-1,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}

            };
                return EvaluateMoveStateScoreC15;
            }


        }
        if (tm.BoardXMax == 17)
        {
            area = this.transform.GetChild(0).GetChild(6).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreA17 = new[,] {
{0, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,},
{0, 0,  0,  0,  0,  -1, 0,  2,  0,  2,  0,  -1, 0,  0,  0,  0,  0,},
{0, 0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0,  -1, 0,  2,  -1, 0,  0,},
{0, 0,  0,  0,  0,  -1, 0,  -1, -1, -1, 0,  -1, 0,  0,  2,  0,  0,},
{0, 0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,},
{0, -1, -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, -1, 0,},
{-1,    0,  0,  0,  0,  0,  2,  0,  0,  0,  2,  0,  0,  0,  0,  0,  -1,},
{0, 2,  0,  -1, 0,  0,  0,  2,  0,  2,  0,  0,  0,  -1, 0,  2,  0,},
{0, 0,  0,  -1, 0,  0,  0,  0,  2,  0,  0,  0,  0,  -1, 0,  0,  0,},
{0, 2,  0,  -1, 0,  0,  0,  2,  0,  2,  0,  0,  0,  -1, 0,  2,  0,},
{-1,    0,  0,  0,  0,  0,  2,  0,  0,  0,  2,  0,  0,  0,  0,  0,  -1,},
{0, -1, -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, -1, 0,},
{0, 0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,},
{0, 0,  2,  0,  0,  -1, 0,  -1, -1, -1, 0,  -1, 0,  0,  2,  0,  0,},
{0, 0,  -1, 2,  0,  -1, 0,  0,  0,  0,  0,  -1, 0,  2,  -1, 0,  0,},
{0, 0,  0,  0,  0,  -1, 0,  2,  0,  2,  0,  -1, 0,  0,  0,  0,  0,},
{0, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,},

            };
                return EvaluateMoveStateScoreA17;

            }
            area = this.transform.GetChild(10).GetChild(10).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreB17 = new[,]
      {
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            {0, 0,  -1, 0,  0,  0,  0,  -1, 0,  -1, 0,  0,  0,  0,  -1, 0,  0},
            {0, -1, -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, -1, 0},
            {0, 0,  0,  2,  -1, 0,  2,  0,  0,  0,  2,  0,  -1, 2,  0,  0,  0},
            {0, 0,  0,  -1, -1, -1, 0,  0,  2,  0,  0,  -1, -1, -1, 0,  0,  0},
            {0, 0,  0,  0,  -1, 2,  0,  0,  -1, 0,  0,  2,  -1, 0,  0,  0,  0},
            {0, 0,  0,  2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  0,  0,  0},
            {0, -1, 0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  -1, 0},
            {0, 0,  -1, 0,  2,  -1, 0,  0,  -1, 0,  0,  -1, 2,  0,  -1, 0,  0},
            {0, -1, 0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  -1, 0},
            {0, 0,  0,  2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  0,  0,  0},
            {0, 0,  0,  0,  -1, 2,  0,  0,  -1, 0,  0,  2,  -1, 0,  0,  0,  0},
            {0, 0,  0,  -1, -1, -1, 0,  0,  2,  0,  0,  -1, -1, -1, 0,  0,  0},
            {0, 0,  0,  2,  -1, 0,  2,  0,  0,  0,  2,  0,  -1, 2,  0,  0,  0},
            {0, -1, -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, -1, 0},
            {0, 0,  -1, 0,  0,  0,  0,  -1, 0,  -1, 0,  0,  0,  0,  -1, 0,  0},
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

        };
                return EvaluateMoveStateScoreB17;
            }
            area = this.transform.GetChild(0).GetChild(16).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreC17 = new[,] {
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0,  0,  -1, 0},
{0, 0,  0,  0,  0,  -1, 0,  0,  -1, 0,  -1, 0,  0,  0,  2,  -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  2,  -1, 2,  -1, 0,  -1, -1, 2,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  0},
{0, -1, 0,  0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0,  0},
{0, 2,  -1, 2,  0,  0,  -1, -1, 2,  -1, 0,  -1, -1, 2,  -1, 2,  0},
{0, -1, 0,  -1, 0,  -1, -1, 2,  2,  2,  -1, -1, 0,  -1, 0,  -1, 0},
{0, 2,  -1, 2,  -1, -1, 0,  -1, 2,  -1, -1, 0,  0,  2,  -1, 2,  0},
{0, 0,  0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  0,  -1, 0},
{0, 0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{0, 2,  -1, -1, 0,  -1, 2,  -1, 2,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, 2,  0,  0,  0,  -1, 0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0},
{0, -1, 0,  0,  0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

            };
                return EvaluateMoveStateScoreC17;
            }
        }
        if (tm.BoardXMax == 21)
        {
            area = this.transform.GetChild(0).GetChild(10).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreA21 = new[,] {
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
{ 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, },
{ 0, 0, 0, 2, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 2, 0, 0, 0, },
{ 0, 0, 2, 2, 0, 0, -1, 0, 0, 0, 2, 0, 0, 0, -1, 0, 0, 2, 2, 0, 0, },
{ 0, 0, 0, 0, -1, 0, -1, 0, 0, 2, 2, 2, 0, 0, -1, 0, -1, 0, 0, 0, 0, },
{ 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, },
{ 0, 0, 0, -1, -1, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, -1, -1, 0, 0, 0, },
{ 0, -1, -1, 0, 0, 0, 0, 2, 0, -1, -1, -1, 0, 2, 0, 0, 0, 0, -1, -1, 0, },
{ 0, -1, 0, 0, 2, 0, -1, 0, 2, 0, 0, 0, 2, 0, -1, 0, 2, 0, 0, -1, 0, },
{ 0, -1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, -1, 0, },
{- 1, 0, 0, 0, -1, 2, 0, 0, -1, 0, 2, 0, -1, 0, 0, 2, -1, 0, 0, 0, -1, },
{ 0, -1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, -1, 0, },
{ 0, -1, 0, 0, 2, 0, -1, 0, 2, 0, 0, 0, 2, 0, -1, 0, 2, 0, 0, -1, 0, },
{ 0, -1, -1, 0, 0, 0, 0, 2, 0, -1, -1, -1, 0, 2, 0, 0, 0, 0, -1, -1, 0, },
{ 0, 0, 0, -1, -1, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, -1, -1, 0, 0, 0, },
{ 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, },
{ 0, 0, 0, 0, -1, 0, -1, 0, 0, 2, 2, 2, 0, 0, -1, 0, -1, 0, 0, 0, 0, },
{ 0, 0, 2, 2, 0, 0, -1, 0, 0, 0, 2, 0, 0, 0, -1, 0, 0, 2, 2, 0, 0, },
{ 0, 0, 0, 2, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 2, 0, 0, 0, },
{ 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },

                };
                return EvaluateMoveStateScoreA21;
            }
            area = this.transform.GetChild(12).GetChild(12).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreB21 = new[,]
      {
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            {0, 2,  0,  0,  0,  0,  2,  0,  0,  -1, 2,  -1, 0,  0,  2,  0,  0,  0,  0,  2,  0},
            {0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
            {0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
            {0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
            {0, 0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0},
            {0, 2,  0,  0,  0,  0,  2,  -1, 0,  0,  -1, 0,  0,  -1, 2,  0,  0,  0,  0,  2,  0},
            {0, 0,  0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  0,  0},
            {0, 0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0},
            {0, -1, 0,  0,  0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  0,  0,  -1, 0},
            {0, 2,  -1, -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, -1, 2,  0},
            {0, -1, 0,  0,  0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  0,  0,  -1, 0},
            {0, 0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0},
            {0, 0,  0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  0,  0},
            {0, 2,  0,  0,  0,  0,  2,  -1, 0,  0,  -1, 0,  0,  -1, 2,  0,  0,  0,  0,  2,  0},
            {0, 0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0},
            {0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
            {0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
            {0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
            {0, 2,  0,  0,  0,  0,  2,  0,  0,  -1, 2,  -1, 0,  0,  2,  0,  0,  0,  0,  2,  0},
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

        };
                return EvaluateMoveStateScoreB21;
            }
            area = this.transform.GetChild(0).GetChild(21).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreC21 = new[,] {
           {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, -1, 0},
{0, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0},
{0, 0,  0,  0,  0,  -1, 0,  -1, 2,  -1, 0,  -1, 2,  0,  -1, 2,  2,  2,  -1, 0,  0},
{0, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  -1, 2,  -1, -1, 2,  -1, -1, 0,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0},
{0, -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, -1, 2,  -1, 2,  -1, 2,  0,  0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  2,  -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, 2,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  0,  2,  -1, 2,  -1, 2,  -1, -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0},
{0, 0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{0, 0,  -1, -1, 2,  -1, -1, 2,  -1, 2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0},
{0, 0,  -1, 2,  2,  2,  -1, 0,  2,  -1, 0,  -1, 2,  -1, 0,  -1, 0,  0,  0,  0,  0},
{0, 0,  -1, -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0,  0,  0},
{0, 0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  0},
{0, -1, -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

            };
                return EvaluateMoveStateScoreC21;
            }
        }
       
        if (tm.BoardXMax == 25)
        {
            area = this.transform.GetChild(0).GetChild(12).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreB25 = new[,]
              {
            {2 ,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2},
            {0 ,    0,  -1, -1, 0,  0,  0,  0,  0,  2,  0,  0,  -1, 0,  0,  2,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
            {0 ,    -1, 0,  0,  0,  0,  -1, -1, -1, 0,  0,  0,  -1, 0,  0,  0,  -1, -1, -1, 0,  0,  0,  0,  -1, 0},
            {0 ,    -1, 0,  2,  0,  0,  0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  0,  0,  2,  0,  -1, 0},
            {0 ,    0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0},
            {0 ,    0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
            {0 ,    0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0},
            {0 ,    0,  -1, 0,  0,  0,  0,  2,  0,  -1, -1, 0,  0,  0,  -1, -1, 0,  2,  0,  0,  0,  0,  -1, 0,  0},
            {0 ,    0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0},
            {0 ,    2,  0,  -1, 0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  -1, 0,  2,  0},
            {0 ,    0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0},
            {0 ,    0,  0,  -1, 0,  0,  2,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  2,  0,  0,  -1, 0,  0,  0},
            {-1 ,   -1, -1, -1, -1, -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, -1, -1, -1, -1, -1},
            {0 ,    0,  0,  -1, 0,  0,  2,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  2,  0,  0,  -1, 0,  0,  0},
            {0 ,    0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0},
            {0 ,    2,  0,  -1, 0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  -1, 0,  2,  0},
            {0 ,    0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0},
            {0 ,    0,  -1, 0,  0,  0,  0,  2,  0,  -1, -1, 0,  0,  0,  -1, -1, 0,  2,  0,  0,  0,  0,  -1, 0,  0},
            {0 ,    0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0},
            {0 ,    0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
            {0 ,    0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0},
            {0 ,    -1, 0,  2,  0,  0,  0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  0,  0,  2,  0,  -1, 0},
            {0 ,    -1, 0,  0,  0,  0,  -1, -1, -1, 0,  0,  0,  -1, 0,  0,  0,  -1, -1, -1, 0,  0,  0,  0,  -1, 0},
            {0 ,    0,  -1, -1, 0,  0,  0,  0,  0,  2,  0,  0,  -1, 0,  0,  2,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
            {2 ,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2},

        };

                return EvaluateMoveStateScoreB25;
            }

            area = this.transform.GetChild(0).GetChild(24).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateBuildStateScoreC25 = new[,] {
{2,   0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  -1},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
{0, -1, 2,  2,  2,  -1, -1, -1, -1, 0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  -1, 0,  -1, 2,  -1, 0,  -1, 2,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  -1, 2,  -1, -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  -1, 0,  0,  0,  0,  -1, 0,  0,  0,  2,  -1, 2,  -1, -1, 0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  -1, 0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  0,  0},
{ -1,    -1, -1, -1, 2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, 2,  -1, 2,  -1, 2,  0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  2,  -1, 0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  0,  -1, 0,  0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0,  -1, 0,  0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, 2,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  2,  -1, 2,  -1, 2,  -1, -1, -1, -1, -1, -1, -1, 2,  2,  2,  -1, -1, -1, -1},
{0, 0,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  -1, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, -1, 2,  -1, 2,  0,  0,  0,  -1, 0,  0,  0,  0,  -1, 0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, -1, 2,  -1, 2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  2,  -1, 0,  -1, 2,  -1, 0,  -1, 0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  -1, -1, -1, -1, 2,  2,  2,  -1, 0},
{0, 0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{ -1,    2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  2},


    };
                return EvaluateBuildStateScoreC25;
            }
        }
    


        int[,] EvaluateMoveStateScoreA25 = new[,] {
{ -100, -100, -100, -100, -100, -100, -100, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                };
        Debug.Log(55555);
        return EvaluateMoveStateScoreA25;







       



        int[,] EvaluateMoveStateScoreC13 = new[,] {
    {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
    {0, 0,  0,  -1, 2,  2,  0,  0,  0,  0,  0,  -1, 0},
    {0, 0,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
    {0, 2,  0,  0,  0,  0,  0,  0,  2,  -1, 2,  0,  0},
    {0, 2,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0},
    {0, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  0,  0},
    {0, 0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0},
    {0, 0,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  0},
    {0, 0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  2,  0},
    {0, 0,  2,  -1, 2,  0,  0,  0,  0,  0,  0,  2,  0},
    {0, 0,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0},
    {0, -1, 0,  0,  0,  0,  0,  2,  2,  -1, 0,  0,  0},
    {-1,-1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

            };
       
    
        int[,] EvaluateBuildStateScoreC15 = new[,] {
          {0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1},
{0, 0,  0,  0,  0,  -1, 2,  -1, 2,  -1, 0,  0,  0,  -1, -1},
{0, 0,  0,  0,  -1, 0,  -1, 0,  -1, 0,  -1, 0,  2,  -1, 0},
{0, 0,  0,  -1, 0,  0,  2,  -1, 2,  0,  0,  -1, -1, 2,  0},
{0, 0,  -1, 0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, 0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0},
{0, 2,  -1, 2,  0,  -1, -1, 2,  -1, 0,  -1, 2,  -1, 2,  0},
{0, -1, 0,  -1, -1, -1, 2,  2,  2,  -1, -1, -1, 0,  -1, 0},
{0, 2,  -1, 2,  -1, 0,  -1, 2,  -1, -1, 0,  2,  -1, 2,  0},
{0, 0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0},
{0, 2,  -1, -1, 0,  0,  2,  -1, 2,  0,  0,  -1, 0,  0,  0},
{0, -1, 2,  0,  -1, 0,  -1, 0,  -1, 0,  -1, 0,  0,  0,  0},
{-1,    -1, 0,  0,  0,  -1, 2,  -1, 2,  -1, 0,  0,  0,  0,  0},
{-1,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}
            };
     
        int[,] EvaluateBuildStateScoreC17 = new[,] {
          {0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0,  0,  -1, 0},
{0, 0,  0,  0,  0,  -1, 0,  0,  -1, 0,  -1, 0,  0,  0,  2,  -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  2,  -1, 2,  -1, 0,  -1, -1, 2,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  0},
{0, -1, 0,  0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0,  0},
{0, 2,  -1, 2,  0,  0,  -1, -1, 2,  -1, 0,  -1, -1, 2,  -1, 2,  0},
{0, -1, 0,  -1, 0,  -1, -1, 2,  2,  2,  -1, -1, 0,  -1, 0,  -1, 0},
{0, 2,  -1, 2,  -1, -1, 0,  -1, 2,  -1, -1, 0,  0,  2,  -1, 2,  0},
{0, 0,  0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  0,  -1, 0},
{0, 0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{0, 2,  -1, -1, 0,  -1, 2,  -1, 2,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, 2,  0,  0,  0,  -1, 0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0},
{0, -1, 0,  0,  0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

            };
     
        int[,] EvaluateBuildStateScoreC21 = new[,] {
           {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, -1, 0},
{0, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0},
{0, 0,  0,  0,  0,  -1, 0,  -1, 2,  -1, 0,  -1, 2,  0,  -1, 2,  2,  2,  -1, 0,  0},
{0, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  -1, 2,  -1, -1, 2,  -1, -1, 0,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0},
{0, -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, -1, 2,  -1, 2,  -1, 2,  0,  0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  2,  -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, 2,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  0,  2,  -1, 2,  -1, 2,  -1, -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0},
{0, 0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{0, 0,  -1, -1, 2,  -1, -1, 2,  -1, 2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0},
{0, 0,  -1, 2,  2,  2,  -1, 0,  2,  -1, 0,  -1, 2,  -1, 0,  -1, 0,  0,  0,  0,  0},
{0, 0,  -1, -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0,  0,  0},
{0, 0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  0},
{0, -1, -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

            };
        int[,] EvaluateMoveStateScoreC25 = new[,] {
{2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  -1},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
{0, -1, 2,  2,  2,  -1, -1, -1, -1, 0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  -1, 0,  -1, 2,  -1, 0,  -1, 2,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  -1, 2,  -1, -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  -1, 0,  0,  0,  0,  -1, 0,  0,  0,  2,  -1, 2,  -1, -1, 0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  -1, 0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  0,  0},
{ -1,    -1, -1, -1, 2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, 2,  -1, 2,  -1, 2,  0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  2,  -1, 0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  0,  -1, 0,  0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0,  -1, 0,  0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, 2,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  2,  -1, 2,  -1, 2,  -1, -1, -1, -1, -1, -1, -1, 2,  2,  2,  -1, -1, -1, -1},
{0, 0,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  -1, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, -1, 2,  -1, 2,  0,  0,  0,  -1, 0,  0,  0,  0,  -1, 0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, -1, 2,  -1, 2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  2,  -1, 0,  -1, 2,  -1, 0,  -1, 0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  -1, -1, -1, -1, 2,  2,  2,  -1, 0},
{0, 0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{ -1,    2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  2},

            };
       
        Debug.Log(8799);
   //     return EvaluateBuildStateScoreC13;
            }
}



/*int[,] EvaluateBuildStateScoreA11 = new[,] {
            { 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0 },
            { 0, 0, 2, 0, -1, 0, -1, 0, 2, 0, 0 },
            { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 },
            { 0, -1, -1, 0, 2, 0, 2, 0, -1, -1, 0 },
            { -1, 0, 0, 0, 0, 2, 0, 0, 0, 0, -1 },
            { 0, -1, -1, 0, 2, 0, 2, 0, 1, 1, 0 },
            { 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0 },
            { 0, 0, 2, 0, -1, 0,- 1, 0, 2, 0, 0 },
            { 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0 }

            };
  int[,] EvaluateMoveStateC11 = new[,]
            {


           { 0 ,  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0,  1 },
           {   0 ,   0 , 0 , 0 , 0 , 0 , 0 , 0 , 2 , 50,  -1 },
           {   0 ,   0 , 0 , 0 , 0 , 0 , 0 , 0 , 50 , 2,  50},
           {   0 ,   0 , 0 , 0 , -1 , -1 , -1 , 2 , 50 , 10,  0},
           {   0 ,   0 , 0 , -1 , -1 , 2 , -1 , 0 , -1 , 0,  0},
           {   0 ,   0 , -1 , -1 , 2 , 2 , 2 , -1 , -1 , 0,  0},
           {   0 ,   0 , -1 , 0 , -1 , 2 , -1 , -1 , 0 , 0,  0},
           {   0 ,   2 , -1 , 2 , -1 , -1 , -1 , 0 , 0 , 0,  0},
           {   50 ,   2 , 50 , 0 , 0 , 0 , 0 , 0 , 0 , 0,  0},
           {   50 ,   50 , 50 , 50 , 25 , 0 , 0 , 0 , 0 , 0,  0},
            {  -1 ,   0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0,  0}
      };
*/