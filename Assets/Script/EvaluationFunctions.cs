using System.Collections;
using System.Collections.Generic;
using System.Runtime.InteropServices.WindowsRuntime;
using UnityEngine;

public class EvaluationFunctions : MonoBehaviour
{
    // Start is called before the first frame update
    TurnManager tm;
    GameObject Board;
    KomaCalulator kc;
    Area area;
    void Awake()
    {
        Board = GameObject.Find("UserInterface/Board");
        tm = this.GetComponent<TurnManager>();
        kc = Board.GetComponent<KomaCalulator>();
      
    }
    public int[,] EvaluationA()
    {
        if (tm.BoardXMax == 11)
        {
            area = this.transform.GetChild(0).GetChild(5).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreA11 = new[,] {
                { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                { 1, 0, 10, 30, -1, 30, -1, 30, 10, -10, 1 },
                { 1, 10, 30, 10, -1, 0, -1, 10, 30, 10, 1 },
                { 1, 0, 10, -1, 10, 0, 10, 1, 10, 30, 1 },
                { 1, -1, -1, 10, 0, 10, 0, 10, -1, -1, 1 },
                { -1, 0, 0, 0, 10, 0, 10, 0, 0, 0, 1 },
                { 1, -1, -1, 10, 0, 10, 0, 10, 1, 1, 1 },
                { 1, 0, 10, -1, 0, 0, 0, -1, 10, 0, 1 },
                { 1, 10, 0, 10, -1, 0,- 1, 10, 0, 10, 1 },
                { 1, 0, 10, 0, -1, 0, -1, 0, 10, 0, 1 },
                { 1, 1, 1, 1, 1, 1,1, 1, 1, 1, 1 },


            };
                Debug.Log(5645);
                return EvaluateMoveStateScoreA11;
               
            }
            area = this.transform.GetChild(5).GetChild(5).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreB11 = new[,]
                {
                {1,   1,  1,  1,  1,  1,  1,  1,  1,  1,  1},
                {1, 0, 5,  0,  0, 0,  0, 0,  0,  5, 1},
                {1, 5,  2,  5,  0,  0, 0,  5,  2,  5,  1},
                {1, 0,  5,  0, 0,  0,  5,  0, 5,  0,  1},
                {1, 0, 0,  0,  2,  5,  2,  5,  0,  0, 1},
                {1, 0,  0, 0,  5,  0, 5,  0,  0, 0,  1},
                {1, 0, 0,  5,  2,  5,  2,  5,  0,  0, 1},
                {1, 0,  5,  0, 5,  0,  5,  0, 5,  0,  1},
                {1, 5,  2,  5,  0,  0, 0,  5,  2,  5,  1},
                {1, 0, 5,  0,  0, 0,  0, 0,  5,  0, 1},
                {1, 1,  1,  1,  1,  1,  1,  1,  1,  1,  1},

             };
                Debug.Log(567);
                return EvaluateMoveStateScoreB11;
            }
            area = this.transform.GetChild(0).GetChild(10).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreC11 = new[,] {
            {  1 , 1,   1,   1 ,  1 ,  1 ,  1 ,  10 ,  10 ,  10 ,  -1 },
            { 1 ,  0 ,  0 ,  0 ,  0 ,  0 ,  0 ,  10 ,  20 ,  30 ,  -1 },
            { 1 ,  0  , 0  , 10 ,  0 ,  0 ,  0 ,  10 ,  30 ,  20 ,  30 },
            { 1 ,  0 ,  0 ,  0 ,  -1 ,  -1 ,  -1 ,  20,   -1 ,  30,   10 },
            { 1   ,0 ,  0 ,  -1 ,  -1 ,  20 ,  -1 ,  10 ,  -1 ,  10 ,  1 },
            { 1  , 0  , -1 ,  -1 ,  20 ,  20 ,  20 ,  -1 ,  -1 ,  0 ,  1 },
            { 1  , 0 ,  -1 ,  10,      -1,   20  , -1 ,  -1,   0 ,  0 ,  1 },
            { 1  , 30  , -1 ,  20 ,  10 ,  1 ,  -1 , 0,   0 ,  0 ,  1 },
            { 30 ,  20 ,   30 ,  10  , 0 ,  0 ,  0 ,  0  , 0 ,  0 ,  1 },
            { -1 , 30 ,  5 ,  0  , 0 ,  0 ,  0 ,  0 ,  0  , 0 ,  1 },
            { -1 ,  1 ,  1 ,  1 ,  1 ,  1 ,  1 ,  1 ,  1  , 1 ,  1 },
                };
                Debug.Log(569);
                return EvaluateMoveStateScoreC11;
            }


        }
        if (tm.BoardXMax == 13)
        {
            area = this.transform.GetChild(0).GetChild(6).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreA13 = new[,] {
    { 1 ,  1  , 1 ,  1  , 1 ,  1,  1 ,  1 ,  1  , 1 ,  1 ,  1,   1},
    { 1  , 0  , 0  , 0 ,  0 ,  0,   0 ,  0 ,  0 ,  0 ,  0  , 0  , 1 },
    { 1  , 0  , 0  , 5 ,  0 ,  0 ,  0 ,  0  , 0 ,  5 ,  0 ,  0 ,  1},
    {   1   ,0 ,  5  , 2  , 5  , 1  , 0 ,  1  , 5  , 2  , 5  , 0  , 1},
    {       0 ,  0 ,  5 ,  0 ,  1  , 5 ,  0 ,  0 ,  5 ,  0 ,  0 ,  0 ,  1},
    {1 ,  0,   0 ,  0 ,  0 ,  2 ,  5,   2 ,  5 ,  0 ,  0 ,  0  , 1},
    { 1  , 0  , 0  , 0  , 0,   5 ,  2 ,  5 ,  0  , 0  , 0  , 0 ,  1},
    { 1  , 0 ,  1 ,  1 ,  5 ,  2,   5 ,  2,   0,   1,   0,   0 ,  1},
    { 1  , 0 ,  0 ,  5 ,  1 ,  5 ,  0  , 0  , 1  , 5  , 0  , 0  , 1},
    { 1  , 0   ,5  , 2 ,  5 ,  1 ,  0,   0 ,  5  , 2 ,  5 ,  0 ,  1},
    { 1 ,  0 ,  0  , 5 ,  0 ,  1 ,  0 ,  0 ,  0,   5 ,  0 ,  0 ,  1},
    { 1  , 1  , 0 ,  0 ,  0  , 1 ,  0,   0  , 0  , 0 ,  0,   0   ,1},
    { 1 ,  1 ,  1 ,  1  , 1  , 1  , 1  , 1 ,  1  , 1 ,  1 ,  1 ,  1}
    };
                return EvaluateMoveStateScoreA13;
            }
            area = this.transform.GetChild(6).GetChild(6).GetComponent<Area>();
            if (area.pond)
            {

                int[,] EvaluateMoveStateScoreB13 = new[,]
                {
            {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            {0, 2,  -1, 0,  0,  -1, 0,  -1, 0,  0,  -1, 2,  0},
            {0, -1, -1, 0,  0,  0,  -1, 0,  0,  0,  -1, -1, 0},
            {0, 0,  0,  2,  0,  0,  -1, 0,  0,  2,  0,  0,  0},
            {0, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0},
            {0, -1, 0,  0,  0,  2,  0,  2,  0,  0,  0,  -1, 0},
            {0, 0,  -1, -1, 0,  0,  -1, 0,  0,  -1, -1, 0,  0},
            {0, -1, 0,  0,  0,  2,  0,  2,  0,  0,  0,  -1, 0},
            {0, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0},
            {0, 0,  0,  2,  0,  0,  -1, 0,  0,  2,  0,  0,  0},
            {0, -1, -1, 0,  0,  0,  -1, 0,  0,  0,  -1, -1, 0},
            {0, 2,  -1, 0,  0,  -1, 0,  -1, 0,  0,  -1, 2,  0},
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            };
                return EvaluateMoveStateScoreB13;
            }
            area = this.transform.GetChild(0).GetChild(12).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateBuildStateScoreC13 = new[,] {
             {0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
            {0, 0,  0,  -1, 2,  2,  0,  0,  0,  0,  0,  -1, 0},
            {0, 0,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
            {0, 2,  0,  0,  0,  0,  0,  0,  2,  -1, 2,  0,  0},
            {0, 2,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0},
            {0, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  0,  0},
            {0, 0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0},
            {0, 0,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  0},
            {0, 0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  2,  0},
            {0, 0,  2,  -1, 2,  0,  0,  0,  0,  0,  0,  2,  0},
            {0, 0,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0},
            {0, -1, 0,  0,  0,  0,  0,  2,  2,  -1, 0,  0,  0},
            { -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            };
                return EvaluateBuildStateScoreC13;
            }

        }
        if (tm.BoardXMax == 15)
        {
            area = this.transform.GetChild(0).GetChild(6).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreA15 = new[,] {

                { 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, },
                { 0, 0, 0, 0, 0, -1, 0, 2, 0, -1, 0, 0, 0, 0, 0, },
                { 0, 0, -1, 2, 0, -1, 0, 0, 0, -1, 0, 2, -1, 0, 0, },
                { 0, 0, 2, 0, 0, -1, 0, -1, 0, -1, 0, 0, 2, 0, 0, },
                { 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, },
                { 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, },
                { -1, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, -1, },
                { 0, 2, 0, -1, 0, 0, 0, 2, 0, 0, 0, -1, 0, 2, 0, },
                { -1, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 1, },
                { 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 0, },
                { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, },
                { 0, 0, 2, 0, 0, -1, 0, 1, 0, -1, 0, 0, 2, 0, 0, },
                { 0, 0, -1, 2, 0, -1, 0, 0, 0, -1, 0, 2, -1, 0, 0, },
                { 0, 0, 0, 0, 0, -1, 0, 2, 0, -1, 0, 0, 0, 0, 0, },
                { 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, }

                };
                return EvaluateMoveStateScoreA15;
            }
            area = this.transform.GetChild(7).GetChild(7).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreB15 = new[,]
    {
            {-100, -100,  10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            {-100, 0,  -1, 0,  0,  0,  -1, 0,  -1, 0,  0,  0,  -1, 0,  0},
            {-100, -1, -1, 0,  0,  0,  0,  -1, 0,  0,  0,  0,  -1, -1, 0},
            {-100, 0,  0,  -1, -1, 0,  0,  0,  0,  0,  -1, -1, 0,  0,  0},
            {-100, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0},
            {-100, 0,  0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0,  0},
            {-100, -1, 0,  0,  0,  0,  2,  0,  0,  0,  0,  0,  0,  -1, 0},
            {-100, 0,  -1, 0,  -1, 0,  0,  -1, 0,  0,  -1, 0,  -1, 0,  0},
            {-100, -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0},
            {-100, -100,  0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0,  0},
            {-100, -100,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0},
            {-100, -100,  0,  -1, -1, 0,  0,  0,  0,  0,  -1, -1, 0,  0,  0},
            {-100, -1, -1, 0,  0,  0,  0,  -1, 0,  0,  0,  0,  -1, -1, 0},
            {-100, 0,  -1, 0,  0,  0,  -1, 0,  -1, 0,  0,  0,  -1, 0,  0},
            {-100, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

        };
                Debug.Log(887879987);
                return EvaluateMoveStateScoreB15;
            }
            area = this.transform.GetChild(0).GetChild(14).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreC15 = new[,] {
          {0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1},
{0, 0,  0,  0,  0,  -1, 2,  -1, 2,  -1, 0,  0,  0,  -1, -1},
{0, 0,  0,  0,  -1, 0,  -1, 0,  -1, 0,  -1, 0,  2,  -1, 0},
{0, 0,  0,  -1, 0,  0,  2,  -1, 2,  0,  0,  -1, -1, 2,  0},
{0, 0,  -1, 0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, 0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0},
{0, 2,  -1, 2,  0,  -1, -1, 2,  -1, 0,  -1, 2,  -1, 2,  0},
{0, -1, 0,  -1, -1, -1, 2,  2,  2,  -1, -1, -1, 0,  -1, 0},
{0, 2,  -1, 2,  -1, 0,  -1, 2,  -1, -1, 0,  2,  -1, 2,  0},
{0, 0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0},
{0, 2,  -1, -1, 0,  0,  2,  -1, 2,  0,  0,  -1, 0,  0,  0},
{0, -1, 2,  0,  -1, 0,  -1, 0,  -1, 0,  -1, 0,  0,  0,  0},
{-1,    -1, 0,  0,  0,  -1, 2,  -1, 2,  -1, 0,  0,  0,  0,  0},
{-1,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}

            };
                return EvaluateMoveStateScoreC15;
            }


        }
        if (tm.BoardXMax == 17)
        {
            area = this.transform.GetChild(0).GetChild(6).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreA17 = new[,] {
{0, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,},
{0, 0,  0,  0,  0,  -1, 0,  2,  0,  2,  0,  -1, 0,  0,  0,  0,  0,},
{0, 0,  -1, 2,  0,  -1, 0,  0,  0,  0,  0,  -1, 0,  2,  -1, 0,  0,},
{0, 0,  2,  0,  0,  -1, 0,  -1, -1, -1, 0,  -1, 0,  0,  2,  0,  0,},
{0, 0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,},
{0, -1, -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, -1, 0,},
{-1,    0,  0,  0,  0,  0,  2,  0,  0,  0,  2,  0,  0,  0,  0,  0,  -1,},
{0, 2,  0,  -1, 0,  0,  0,  2,  0,  2,  0,  0,  0,  -1, 0,  2,  0,},
{0, 0,  0,  -1, 0,  0,  0,  0,  2,  0,  0,  0,  0,  -1, 0,  0,  0,},
{0, 2,  0,  -1, 0,  0,  0,  2,  0,  2,  0,  0,  0,  -1, 0,  2,  0,},
{-1,    0,  0,  0,  0,  0,  2,  0,  0,  0,  2,  0,  0,  0,  0,  0,  -1,},
{0, -1, -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, -1, 0,},
{0, 0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,},
{0, 0,  2,  0,  0,  -1, 0,  -1, -1, -1, 0,  -1, 0,  0,  2,  0,  0,},
{0, 0,  -1, 2,  0,  -1, 0,  0,  0,  0,  0,  -1, 0,  2,  -1, 0,  0,},
{0, 0,  0,  0,  0,  -1, 0,  2,  0,  2,  0,  -1, 0,  0,  0,  0,  0,},
{0, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,},

            };
                return EvaluateMoveStateScoreA17;

            }
            area = this.transform.GetChild(10).GetChild(10).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreB17 = new[,]
      {
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            {0, 0,  -1, 0,  0,  0,  0,  -1, 0,  -1, 0,  0,  0,  0,  -1, 0,  0},
            {0, -1, -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, -1, 0},
            {0, 0,  0,  2,  -1, 0,  2,  0,  0,  0,  2,  0,  -1, 2,  0,  0,  0},
            {0, 0,  0,  -1, -1, -1, 0,  0,  2,  0,  0,  -1, -1, -1, 0,  0,  0},
            {0, 0,  0,  0,  -1, 2,  0,  0,  -1, 0,  0,  2,  -1, 0,  0,  0,  0},
            {0, 0,  0,  2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  0,  0,  0},
            {0, -1, 0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  -1, 0},
            {0, 0,  -1, 0,  2,  -1, 0,  0,  -1, 0,  0,  -1, 2,  0,  -1, 0,  0},
            {0, -1, 0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  -1, 0},
            {0, 0,  0,  2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  0,  0,  0},
            {0, 0,  0,  0,  -1, 2,  0,  0,  -1, 0,  0,  2,  -1, 0,  0,  0,  0},
            {0, 0,  0,  -1, -1, -1, 0,  0,  2,  0,  0,  -1, -1, -1, 0,  0,  0},
            {0, 0,  0,  2,  -1, 0,  2,  0,  0,  0,  2,  0,  -1, 2,  0,  0,  0},
            {0, -1, -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, -1, 0},
            {0, 0,  -1, 0,  0,  0,  0,  -1, 0,  -1, 0,  0,  0,  0,  -1, 0,  0},
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

        };
                return EvaluateMoveStateScoreB17;
            }
            area = this.transform.GetChild(0).GetChild(16).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreC17 = new[,] {
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0,  0,  -1, 0},
{0, 0,  0,  0,  0,  -1, 0,  0,  -1, 0,  -1, 0,  0,  0,  2,  -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  2,  -1, 2,  -1, 0,  -1, -1, 2,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  0},
{0, -1, 0,  0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0,  0},
{0, 2,  -1, 2,  0,  0,  -1, -1, 2,  -1, 0,  -1, -1, 2,  -1, 2,  0},
{0, -1, 0,  -1, 0,  -1, -1, 2,  2,  2,  -1, -1, 0,  -1, 0,  -1, 0},
{0, 2,  -1, 2,  -1, -1, 0,  -1, 2,  -1, -1, 0,  0,  2,  -1, 2,  0},
{0, 0,  0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  0,  -1, 0},
{0, 0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{0, 2,  -1, -1, 0,  -1, 2,  -1, 2,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, 2,  0,  0,  0,  -1, 0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0},
{0, -1, 0,  0,  0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

            };
                return EvaluateMoveStateScoreC17;
            }
        }
        if (tm.BoardXMax == 21)
        {
            area = this.transform.GetChild(0).GetChild(10).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreA21 = new[,] {
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
{ 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, },
{ 0, 0, 0, 2, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 2, 0, 0, 0, },
{ 0, 0, 2, 2, 0, 0, -1, 0, 0, 0, 2, 0, 0, 0, -1, 0, 0, 2, 2, 0, 0, },
{ 0, 0, 0, 0, -1, 0, -1, 0, 0, 2, 2, 2, 0, 0, -1, 0, -1, 0, 0, 0, 0, },
{ 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, },
{ 0, 0, 0, -1, -1, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, -1, -1, 0, 0, 0, },
{ 0, -1, -1, 0, 0, 0, 0, 2, 0, -1, -1, -1, 0, 2, 0, 0, 0, 0, -1, -1, 0, },
{ 0, -1, 0, 0, 2, 0, -1, 0, 2, 0, 0, 0, 2, 0, -1, 0, 2, 0, 0, -1, 0, },
{ 0, -1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, -1, 0, },
{- 1, 0, 0, 0, -1, 2, 0, 0, -1, 0, 2, 0, -1, 0, 0, 2, -1, 0, 0, 0, -1, },
{ 0, -1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, -1, 0, },
{ 0, -1, 0, 0, 2, 0, -1, 0, 2, 0, 0, 0, 2, 0, -1, 0, 2, 0, 0, -1, 0, },
{ 0, -1, -1, 0, 0, 0, 0, 2, 0, -1, -1, -1, 0, 2, 0, 0, 0, 0, -1, -1, 0, },
{ 0, 0, 0, -1, -1, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, -1, -1, -1, 0, 0, 0, },
{ 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, },
{ 0, 0, 0, 0, -1, 0, -1, 0, 0, 2, 2, 2, 0, 0, -1, 0, -1, 0, 0, 0, 0, },
{ 0, 0, 2, 2, 0, 0, -1, 0, 0, 0, 2, 0, 0, 0, -1, 0, 0, 2, 2, 0, 0, },
{ 0, 0, 0, 2, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 2, 0, 0, 0, },
{ 0, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },

                };
                return EvaluateMoveStateScoreA21;
            }
            area = this.transform.GetChild(12).GetChild(12).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreB21 = new[,]
      {
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},
            {0, 2,  0,  0,  0,  0,  2,  0,  0,  -1, 2,  -1, 0,  0,  2,  0,  0,  0,  0,  2,  0},
            {0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
            {0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
            {0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
            {0, 0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0},
            {0, 2,  0,  0,  0,  0,  2,  -1, 0,  0,  -1, 0,  0,  -1, 2,  0,  0,  0,  0,  2,  0},
            {0, 0,  0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  0,  0},
            {0, 0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0},
            {0, -1, 0,  0,  0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  0,  0,  -1, 0},
            {0, 2,  -1, -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, -1, 2,  0},
            {0, -1, 0,  0,  0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  0,  0,  -1, 0},
            {0, 0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0},
            {0, 0,  0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  0,  0},
            {0, 2,  0,  0,  0,  0,  2,  -1, 0,  0,  -1, 0,  0,  -1, 2,  0,  0,  0,  0,  2,  0},
            {0, 0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0},
            {0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
            {0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
            {0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
            {0, 2,  0,  0,  0,  0,  2,  0,  0,  -1, 2,  -1, 0,  0,  2,  0,  0,  0,  0,  2,  0},
            {0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

        };
                return EvaluateMoveStateScoreB21;
            }
            area = this.transform.GetChild(0).GetChild(21).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreC21 = new[,] {
           {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, -1, 0},
{0, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0},
{0, 0,  0,  0,  0,  -1, 0,  -1, 2,  -1, 0,  -1, 2,  0,  -1, 2,  2,  2,  -1, 0,  0},
{0, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  -1, 2,  -1, -1, 2,  -1, -1, 0,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0},
{0, -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, -1, 2,  -1, 2,  -1, 2,  0,  0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  2,  -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, 2,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  0,  2,  -1, 2,  -1, 2,  -1, -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0},
{0, 0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{0, 0,  -1, -1, 2,  -1, -1, 2,  -1, 2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0},
{0, 0,  -1, 2,  2,  2,  -1, 0,  2,  -1, 0,  -1, 2,  -1, 0,  -1, 0,  0,  0,  0,  0},
{0, 0,  -1, -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0,  0,  0},
{0, 0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  0},
{0, -1, -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

            };
                return EvaluateMoveStateScoreC21;
            }
        }
       
        if (tm.BoardXMax == 25)
        {
            area = this.transform.GetChild(0).GetChild(12).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateMoveStateScoreB25 = new[,]
              {
            {2 ,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2},
            {0 ,    0,  -1, -1, 0,  0,  0,  0,  0,  2,  0,  0,  -1, 0,  0,  2,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
            {0 ,    -1, 0,  0,  0,  0,  -1, -1, -1, 0,  0,  0,  -1, 0,  0,  0,  -1, -1, -1, 0,  0,  0,  0,  -1, 0},
            {0 ,    -1, 0,  2,  0,  0,  0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  0,  0,  2,  0,  -1, 0},
            {0 ,    0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0},
            {0 ,    0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
            {0 ,    0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0},
            {0 ,    0,  -1, 0,  0,  0,  0,  2,  0,  -1, -1, 0,  0,  0,  -1, -1, 0,  2,  0,  0,  0,  0,  -1, 0,  0},
            {0 ,    0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0},
            {0 ,    2,  0,  -1, 0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  -1, 0,  2,  0},
            {0 ,    0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0},
            {0 ,    0,  0,  -1, 0,  0,  2,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  2,  0,  0,  -1, 0,  0,  0},
            {-1 ,   -1, -1, -1, -1, -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, -1, -1, -1, -1, -1},
            {0 ,    0,  0,  -1, 0,  0,  2,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  2,  0,  0,  -1, 0,  0,  0},
            {0 ,    0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0},
            {0 ,    2,  0,  -1, 0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  -1, 0,  2,  0},
            {0 ,    0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0},
            {0 ,    0,  -1, 0,  0,  0,  0,  2,  0,  -1, -1, 0,  0,  0,  -1, -1, 0,  2,  0,  0,  0,  0,  -1, 0,  0},
            {0 ,    0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0,  2,  0,  2,  0,  0,  0,  0,  0,  -1, 0,  0,  -1, 0,  0},
            {0 ,    0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
            {0 ,    0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0},
            {0 ,    -1, 0,  2,  0,  0,  0,  0,  0,  -1, -1, -1, -1, -1, -1, -1, 0,  0,  0,  0,  0,  2,  0,  -1, 0},
            {0 ,    -1, 0,  0,  0,  0,  -1, -1, -1, 0,  0,  0,  -1, 0,  0,  0,  -1, -1, -1, 0,  0,  0,  0,  -1, 0},
            {0 ,    0,  -1, -1, 0,  0,  0,  0,  0,  2,  0,  0,  -1, 0,  0,  2,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
            {2 ,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2},

        };

                return EvaluateMoveStateScoreB25;
            }

            area = this.transform.GetChild(0).GetChild(24).GetComponent<Area>();
            if (area.pond)
            {
                int[,] EvaluateBuildStateScoreC25 = new[,] {
{2,   0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  -1},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
{0, -1, 2,  2,  2,  -1, -1, -1, -1, 0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  -1, 0,  -1, 2,  -1, 0,  -1, 2,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  -1, 2,  -1, -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  -1, 0,  0,  0,  0,  -1, 0,  0,  0,  2,  -1, 2,  -1, -1, 0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  -1, 0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  0,  0},
{ -1,    -1, -1, -1, 2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, 2,  -1, 2,  -1, 2,  0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  2,  -1, 0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  0,  -1, 0,  0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0,  -1, 0,  0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, 2,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  2,  -1, 2,  -1, 2,  -1, -1, -1, -1, -1, -1, -1, 2,  2,  2,  -1, -1, -1, -1},
{0, 0,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  -1, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, -1, 2,  -1, 2,  0,  0,  0,  -1, 0,  0,  0,  0,  -1, 0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, -1, 2,  -1, 2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  2,  -1, 0,  -1, 2,  -1, 0,  -1, 0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  -1, -1, -1, -1, 2,  2,  2,  -1, 0},
{0, 0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{ -1,    2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  2},


    };
                return EvaluateBuildStateScoreC25;
            }
        }



        int[,] EvaluateMoveStateScoreA25 = new[,] {
{ -100, -100, -100, -100, -100, -100, -100, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
                };

        return EvaluateMoveStateScoreA25;







       



        int[,] EvaluateMoveStateScoreC13 = new[,] {
    {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
    {0, 0,  0,  -1, 2,  2,  0,  0,  0,  0,  0,  -1, 0},
    {0, 0,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
    {0, 2,  0,  0,  0,  0,  0,  0,  2,  -1, 2,  0,  0},
    {0, 2,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0},
    {0, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  0,  0},
    {0, 0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0},
    {0, 0,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  0},
    {0, 0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  2,  0},
    {0, 0,  2,  -1, 2,  0,  0,  0,  0,  0,  0,  2,  0},
    {0, 0,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0},
    {0, -1, 0,  0,  0,  0,  0,  2,  2,  -1, 0,  0,  0},
    {-1,-1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

            };
       
    
        int[,] EvaluateBuildStateScoreC15 = new[,] {
          {0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1},
{0, 0,  0,  0,  0,  -1, 2,  -1, 2,  -1, 0,  0,  0,  -1, -1},
{0, 0,  0,  0,  -1, 0,  -1, 0,  -1, 0,  -1, 0,  2,  -1, 0},
{0, 0,  0,  -1, 0,  0,  2,  -1, 2,  0,  0,  -1, -1, 2,  0},
{0, 0,  -1, 0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, 0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0},
{0, 2,  -1, 2,  0,  -1, -1, 2,  -1, 0,  -1, 2,  -1, 2,  0},
{0, -1, 0,  -1, -1, -1, 2,  2,  2,  -1, -1, -1, 0,  -1, 0},
{0, 2,  -1, 2,  -1, 0,  -1, 2,  -1, -1, 0,  2,  -1, 2,  0},
{0, 0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0},
{0, 2,  -1, -1, 0,  0,  2,  -1, 2,  0,  0,  -1, 0,  0,  0},
{0, -1, 2,  0,  -1, 0,  -1, 0,  -1, 0,  -1, 0,  0,  0,  0},
{-1,    -1, 0,  0,  0,  -1, 2,  -1, 2,  -1, 0,  0,  0,  0,  0},
{-1,    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0}
            };
     
        int[,] EvaluateBuildStateScoreC17 = new[,] {
          {0,   0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0,  0,  -1, 0},
{0, 0,  0,  0,  0,  -1, 0,  0,  -1, 0,  -1, 0,  0,  0,  2,  -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  2,  -1, 2,  -1, 0,  -1, -1, 2,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0,  0,  0},
{0, -1, 0,  0,  0,  0,  0,  -1, -1, -1, 2,  -1, 2,  0,  0,  0,  0},
{0, 2,  -1, 2,  0,  0,  -1, -1, 2,  -1, 0,  -1, -1, 2,  -1, 2,  0},
{0, -1, 0,  -1, 0,  -1, -1, 2,  2,  2,  -1, -1, 0,  -1, 0,  -1, 0},
{0, 2,  -1, 2,  -1, -1, 0,  -1, 2,  -1, -1, 0,  0,  2,  -1, 2,  0},
{0, 0,  0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  0,  -1, 0},
{0, 0,  0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0},
{0, 0,  0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{0, 2,  -1, -1, 0,  -1, 2,  -1, 2,  0,  0,  0,  -1, -1, 0,  0,  0},
{0, -1, 2,  0,  0,  0,  -1, 0,  -1, 0,  0,  -1, 0,  0,  0,  0,  0},
{0, -1, 0,  0,  0,  0,  2,  -1, 2,  -1, -1, -1, 0,  0,  0,  0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

            };
     
        int[,] EvaluateBuildStateScoreC21 = new[,] {
           {0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, -1, 0},
{0, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0},
{0, 0,  0,  0,  0,  -1, 0,  -1, 2,  -1, 0,  -1, 2,  0,  -1, 2,  2,  2,  -1, 0,  0},
{0, 0,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  -1, 2,  -1, -1, 2,  -1, -1, 0,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0},
{0, -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, -1, 2,  -1, 2,  -1, 2,  0,  0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  2,  -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, 2,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  0,  2,  -1, 2,  -1, 2,  -1, -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0},
{0, 0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{0, 0,  -1, -1, 2,  -1, -1, 2,  -1, 2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  0,  0},
{0, 0,  -1, 2,  2,  2,  -1, 0,  2,  -1, 0,  -1, 2,  -1, 0,  -1, 0,  0,  0,  0,  0},
{0, 0,  -1, -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0,  0,  0},
{0, 0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  0},
{0, -1, -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0},

            };
        int[,] EvaluateMoveStateScoreC25 = new[,] {
{2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  2,  -1},
{0, 0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, -1, 0,  0},
{0, -1, 2,  2,  2,  -1, -1, -1, -1, 0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0},
{0, 0,  -1, 2,  -1, 0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  0,  -1, 0,  -1, 2,  -1, 0,  -1, 2,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  0,  -1, 0,  0,  0,  -1, 0,  0,  2,  -1, 2,  -1, -1, 2,  -1, -1, 0,  0,  0,  0},
{0, 0,  0,  -1, 0,  -1, 0,  0,  0,  0,  -1, 0,  0,  0,  2,  -1, 2,  -1, -1, 0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  -1, 0,  0,  0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  0,  0},
{ -1,    -1, -1, -1, 2,  2,  2,  -1, -1, -1, -1, -1, -1, -1, 2,  -1, 2,  -1, 2,  0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  -1, -1, 2,  -1, 0,  -1, 0,  2,  -1, 0,  0,  0,  0,  0,  0},
{0, 0,  0,  0,  0,  -1, 0,  0,  0,  -1, -1, 2,  2,  2,  -1, -1, 0,  0,  0,  -1, 0,  0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, 2,  0,  -1, 0,  -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  2,  -1, 2,  -1, 2,  -1, -1, -1, -1, -1, -1, -1, 2,  2,  2,  -1, -1, -1, -1},
{0, 0,  0,  0,  0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  -1, 0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0},
{0, 0,  0,  0,  0,  0,  -1, -1, 2,  -1, 2,  0,  0,  0,  -1, 0,  0,  0,  0,  -1, 0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, -1, 2,  -1, 2,  0,  0,  -1, 0,  0,  0,  -1, 0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  2,  -1, 0,  -1, 2,  -1, 0,  -1, 0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  -1, -1, 2,  -1, -1, 0,  0,  0,  -1, 2,  2,  2,  -1, 0,  0,  0,  0,  -1, 0,  0,  0},
{0, 0,  0,  0,  2,  -1, -1, 0,  0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{0, 0,  0,  -1, -1, 2,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  -1, -1, -1, -1, 2,  2,  2,  -1, 0},
{0, 0,  -1, -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  -1, 2,  -1, 0,  0},
{ -1,    -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  -1, 0,  0,  0},
{ -1,    2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  -1, 0,  0,  0,  0,  0,  0,  0,  0,  0,  2},

            };
       
        Debug.Log(8799);
   //     return EvaluateBuildStateScoreC13;
            }
}



/*int[,] EvaluateBuildStateScoreA11 = new[,] {
            { 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0 },
            { 0, 0, 2, 0, -1, 0, -1, 0, 2, 0, 0 },
            { 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 },
            { 0, -1, -1, 0, 2, 0, 2, 0, -1, -1, 0 },
            { -1, 0, 0, 0, 0, 2, 0, 0, 0, 0, -1 },
            { 0, -1, -1, 0, 2, 0, 2, 0, 1, 1, 0 },
            { 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0 },
            { 0, 0, 2, 0, -1, 0,- 1, 0, 2, 0, 0 },
            { 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0 }

            };
  int[,] EvaluateMoveStateC11 = new[,]
            {


           { 0 ,  0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0,  1 },
           {   0 ,   0 , 0 , 0 , 0 , 0 , 0 , 0 , 2 , 50,  -1 },
           {   0 ,   0 , 0 , 0 , 0 , 0 , 0 , 0 , 50 , 2,  50},
           {   0 ,   0 , 0 , 0 , -1 , -1 , -1 , 2 , 50 , 10,  0},
           {   0 ,   0 , 0 , -1 , -1 , 2 , -1 , 0 , -1 , 0,  0},
           {   0 ,   0 , -1 , -1 , 2 , 2 , 2 , -1 , -1 , 0,  0},
           {   0 ,   0 , -1 , 0 , -1 , 2 , -1 , -1 , 0 , 0,  0},
           {   0 ,   2 , -1 , 2 , -1 , -1 , -1 , 0 , 0 , 0,  0},
           {   50 ,   2 , 50 , 0 , 0 , 0 , 0 , 0 , 0 , 0,  0},
           {   50 ,   50 , 50 , 50 , 25 , 0 , 0 , 0 , 0 , 0,  0},
            {  -1 ,   0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0,  0}
      };
*/